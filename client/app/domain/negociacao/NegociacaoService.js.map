{"version":3,"sources":["../../../app-src/domain/negociacao/NegociacaoService.js"],"names":["HttpService","Negociacao","NegociacaoService","constructor","_http","obtemNegociacoesDaSemana","get","then","dados","map","objeto","Date","data","quantidade","valor","err","ApplicationException","obtemNegociacaoDaSemanaAnterior","obtemNegociacoesDaSemanaRetrasada","obtemNegociacoesDoPeriodo","periodo","Promise","all","reduce","novoArray","item","concat","sort","a","b","getTime","e","console","log"],"mappings":";;AAAA,SAAQA,WAAR,QAA0B,2BAA1B;AACA,SAAQC,UAAR,QAAyB,iBAAzB;;AAEA,WAAaC,iBAAb,GAAO,MAAMA,iBAAN,CAAwB;;AAE7BC,gBAAa;;AAET,SAAKC,KAAL,GAAa,IAAIJ,WAAJ,EAAb;AACH;;AAEDK,6BAA2B;;AAEvB,WAAO,KAAKD,KAAL,CAAWE,GAAX,CAAe,0CAAf,EACAC,IADA,CAEGC,SACEA,MAAMC,GAAN,CAAUC,UAAU,IAAIT,UAAJ,CAAe,IAAIU,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EACVF,OAAOG,UADG,EACSH,OAAOI,KADhB,CAApB,CAHL,EAKKC,OAAO;;AAEP,YAAM,IAAIC,oBAAJ,CAAyB,wCAAzB,CAAN;AACC,KARN,CAAP;AAWH;;AAEDC,oCAAiC;;AAE7B,WAAO,KAAKb,KAAL,CAAWE,GAAX,CAAe,4CAAf,EACAC,IADA,CAECC,SACEA,MAAMC,GAAN,CAAUC,UAAU,IAAIT,UAAJ,CAAe,IAAIU,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EACZF,OAAOG,UADK,EACOH,OAAOI,KADd,CAApB,CAHH,EAKGC,OAAO;;AAEP,YAAM,IAAIC,oBAAJ,CAAyB,iDAAzB,CAAN;AACD,KARF,CAAP;AAUH;;AAEDE,sCAAmC;;AAEjC,WAAO,KAAKd,KAAL,CAAWE,GAAX,CAAe,6CAAf,EACAC,IADA,CAECC,SACEA,MAAMC,GAAN,CAAUC,UAAU,IAAIT,UAAJ,CAAe,IAAIU,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EACZF,OAAOG,UADK,EACOH,OAAOI,KADd,CAApB,CAHH,EAKCC,OAAM;;AAEN,YAAM,IAAIC,oBAAJ,CAAyB,kDAAzB,CAAN;AACC,KARF,CAAP;AAUD;;AAEKG,2BAAN,GAAiC;AAAA;;AAAA;;AAE/B,UAAI;AACF,YAAIC,UAAU,MAAMC,QAAQC,GAAR,CAAY,CAC9B,MAAKjB,wBAAL,EAD8B,EAE9B,MAAKY,+BAAL,EAF8B,EAG9B,MAAKC,iCAAL,EAH8B,CAAZ,CAApB;;AAMA,eAAOE,QACNG,MADM,CACC,UAACC,SAAD,EAAYC,IAAZ;AAAA,iBAAqBD,UAAUE,MAAV,CAAiBD,IAAjB,CAArB;AAAA,SADD,EAC6C,EAD7C,EAENE,IAFM,CAED,UAACC,CAAD,EAAGC,CAAH;AAAA,iBAASA,EAAEjB,IAAF,CAAOkB,OAAP,KAAmBF,EAAEhB,IAAF,CAAOkB,OAAP,EAA5B;AAAA,SAFC,CAAP;AAID,OAXD,CAWE,OAAOC,CAAP,EAAU;AACVC,gBAAQC,GAAR,CAAYlB,GAAZ;AACA,cAAM,IAAIC,oBAAJ,CAAyB,wDAAzB,CAAN;AACD;AAhB8B;AAiBhC;;AAnE4B,CAA/B","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from '../../util/HttpService.js';\r\nimport {Negociacao} from './Negociacao.js';\r\n\r\nexport class NegociacaoService {\r\n\r\n  constructor(){\r\n\r\n      this._http = new HttpService();\r\n  }\r\n\r\n  obtemNegociacoesDaSemana() {\r\n\r\n      return this._http.get('http://localhost:3000/negociacoes/semana')\r\n            .then(\r\n                dados =>\r\n                  dados.map(objeto => new Negociacao(new Date(objeto.data),\r\n                            objeto.quantidade, objeto.valor)),\r\n                  err => {\r\n\r\n                  throw new ApplicationException('Importação da Semana impedida por erro');\r\n                  }\r\n            );\r\n\r\n  }\r\n\r\n  obtemNegociacaoDaSemanaAnterior(){\r\n\r\n      return this._http.get('http://localhost:3000/negociacoes/anterior')\r\n            .then(\r\n              dados =>\r\n                dados.map(objeto => new Negociacao(new Date(objeto.data),\r\n                        objeto.quantidade, objeto.valor)),\r\n                err => {\r\n\r\n                throw new ApplicationException('Importação da Semana Anterior impedida por erro');\r\n              }\r\n            );\r\n  }\r\n\r\n  obtemNegociacoesDaSemanaRetrasada(){\r\n\r\n    return this._http.get('http://localhost:3000/negociacoes/retrasada')\r\n          .then(\r\n            dados =>\r\n              dados.map(objeto => new Negociacao(new Date(objeto.data),\r\n                      objeto.quantidade, objeto.valor)),\r\n            err =>{\r\n\r\n            throw new ApplicationException('Importação da semana retrasada impedida por erro');\r\n            }\r\n          );\r\n  }\r\n\r\n  async obtemNegociacoesDoPeriodo(){\r\n\r\n    try {\r\n      let periodo = await Promise.all([\r\n        this.obtemNegociacoesDaSemana(),\r\n        this.obtemNegociacaoDaSemanaAnterior(),\r\n        this.obtemNegociacoesDaSemanaRetrasada()\r\n      ]);\r\n\r\n      return periodo\r\n      .reduce((novoArray, item) => novoArray.concat(item),[])\r\n      .sort((a,b) => b.data.getTime() - a.data.getTime());\r\n\r\n    } catch (e) {\r\n      console.log(err);\r\n      throw new ApplicationException('Negociações não importadas nesse periodo devido a erro');\r\n    };\r\n  }\r\n\r\n}\r\n"]}